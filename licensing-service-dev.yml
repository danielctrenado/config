logging:
  level:
    org.springframework.web: WARN
    com.optimagrowth: DEBUG


eureka:
    client:
        fetchRegistry: true
        registerWithEureka: true
        serviceUrl:
            defaultZone: http://localhost:8070/eureka/
    instance:
        preferIpAddress: true


spring:
    datasource:
        url: jdbc:postgresql://localhost:5432/danielctrenado
        username: '{cipher}2e15b7b439951d2d2f2769caca6135451fdadd9c7cb6127f95f748787508af0a'
        password: '{cipher}fe8155c9ade57c12e524cecbbc55c211a22a7d71f9d77da34cbbad7bf7a9c22ac616d3d03c220b230049732e0b566854'
    jpa:
        properties:
            hibernate:
                default_schema: danschema

management:
  endpoints:
    web:
      exposure:
        include: '*'
    health:
      show-details: always
      circuitbreakers:
        enabled: true

example:
    property: I AM DEV


##########################################
#
# resilience
#
##########################################
resilience4j.circuitbreaker:
  instances:
    licenseService:
      registerHealthIndicator: true
      slidingWindowSize: 8
      failureRateThreshold: 60
      waitDurationInOpenState: 30s
      permittedNumberOfCallsInHalfOpenState: 3
      minimumNumberOfCalls: 4
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
    organizationService:
      registerHealthIndicator: true
      slidingWindowSize: 4
      failureRateThreshold: 30
      waitDurationInOpenState: 30s
      permittedNumberOfCallsInHalfOpenState: 3
      minimumNumberOfCalls: 2

resilience4j.ratelimiter:
  instances:
    licenseService:
      limitForPeriod: 5
      limitRefreshPeriod: 5000
      timeoutDuration: 1000ms

resilience4j.retry:
  instances:
    retryLicenseService:
      maxRetryAttempts: 5
      waitDuration: 10000
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.thread-pool-bulkhead:
  instances:
    bulkheadLicenseService:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1

