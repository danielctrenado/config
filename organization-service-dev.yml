logging:
  level:
    org.springframework.web: WARN
    com.danielctrenado: DEBUG
  pattern:
    correlation: "[${spring.application.name:},%X{traceId:-},%X{spanId:-}] "
  include-application-name: false

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/danielctrenado
    username: '{cipher}2e15b7b439951d2d2f2769caca6135451fdadd9c7cb6127f95f748787508af0a'
    password: '{cipher}fe8155c9ade57c12e524cecbbc55c211a22a7d71f9d77da34cbbad7bf7a9c22ac616d3d03c220b230049732e0b566854'
  jpa:
    properties:
      hibernate.default_schema: danschema
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/spmia-realm/protocol/openid-connect/certs
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        output:
          destination: organization.change.topic
          content-type: application/json
#####################################################################################
#
# management
#
#####################################################################################
management:
  endpoints:
    web:
      exposure:
        include: '*'
  zipkin:
    tracing:
      endpoint: localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
